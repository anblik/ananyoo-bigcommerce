{"version":3,"file":"theme-bundle.chunk.533.js","mappings":"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","sources":["webpack://bigcommerce-cornerstone/./assets/js/theme/auth.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/form-validation.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/state-country.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/utils/translations-utils.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_arrayEach.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseCreate.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseFor.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseForOwn.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseIteratee.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_createBaseFor.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/keys.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/transform.js"],"sourcesContent":["import PageManager from './page-manager';\r\nimport stateCountry from './common/state-country';\r\nimport nod from './common/nod';\r\nimport validation from './common/form-validation';\r\nimport forms from './common/models/forms';\r\nimport {\r\n    classifyForm,\r\n    Validators,\r\n    createPasswordValidationErrorTextObject,\r\n    announceInputErrorMessage,\r\n} from './common/utils/form-utils';\r\nimport { createTranslationDictionary } from './common/utils/translations-utils';\r\n\r\nexport default class Auth extends PageManager {\r\n    constructor(context) {\r\n        super(context);\r\n        this.validationDictionary = createTranslationDictionary(context);\r\n        this.formCreateSelector = 'form[data-create-account-form]';\r\n        this.recaptcha = $('.g-recaptcha iframe[src]');\r\n    }\r\n\r\n    registerLoginValidation($loginForm) {\r\n        const loginModel = forms;\r\n\r\n        this.loginValidator = nod({\r\n            submit: '.login-form input[type=\"submit\"]',\r\n            tap: announceInputErrorMessage,\r\n        });\r\n\r\n        this.loginValidator.add([\r\n            {\r\n                selector: '.login-form input[name=\"login_email\"]',\r\n                validate: (cb, val) => {\r\n                    const result = loginModel.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: this.context.useValidEmail,\r\n            },\r\n            {\r\n                selector: '.login-form input[name=\"login_pass\"]',\r\n                validate: (cb, val) => {\r\n                    const result = loginModel.password(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: this.context.enterPass,\r\n            },\r\n        ]);\r\n\r\n        $loginForm.on('submit', event => {\r\n            this.loginValidator.performCheck();\r\n\r\n            if (this.loginValidator.areAll('valid')) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n    }\r\n\r\n    registerForgotPasswordValidation($forgotPasswordForm) {\r\n        this.forgotPasswordValidator = nod({\r\n            submit: '.forgot-password-form input[type=\"submit\"]',\r\n            tap: announceInputErrorMessage,\r\n        });\r\n\r\n        this.forgotPasswordValidator.add([\r\n            {\r\n                selector: '.forgot-password-form input[name=\"email\"]',\r\n                validate: (cb, val) => {\r\n                    const result = forms.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: this.context.useValidEmail,\r\n            },\r\n        ]);\r\n\r\n        $forgotPasswordForm.on('submit', event => {\r\n            this.forgotPasswordValidator.performCheck();\r\n\r\n            if (this.forgotPasswordValidator.areAll('valid')) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n    }\r\n\r\n    registerNewPasswordValidation() {\r\n        const { password: enterPassword, password_match: matchPassword } = this.validationDictionary;\r\n        const newPasswordForm = '.new-password-form';\r\n        const newPasswordValidator = nod({\r\n            submit: $(`${newPasswordForm} input[type=\"submit\"]`),\r\n            tap: announceInputErrorMessage,\r\n        });\r\n        const passwordSelector = $(`${newPasswordForm} input[name=\"password\"]`);\r\n        const password2Selector = $(`${newPasswordForm} input[name=\"password_confirm\"]`);\r\n        const errorTextMessages = createPasswordValidationErrorTextObject(enterPassword, enterPassword, matchPassword, this.passwordRequirements.error);\r\n        Validators.setPasswordValidation(\r\n            newPasswordValidator,\r\n            passwordSelector,\r\n            password2Selector,\r\n            this.passwordRequirements,\r\n            errorTextMessages,\r\n        );\r\n    }\r\n\r\n    registerCreateAccountValidator($createAccountForm) {\r\n        const validationModel = validation($createAccountForm, this.context);\r\n        const createAccountValidator = nod({\r\n            submit: `${this.formCreateSelector} input[type='submit']`,\r\n            delay: 900,\r\n        });\r\n        const $stateElement = $('[data-field-type=\"State\"]');\r\n        const emailSelector = `${this.formCreateSelector} [data-field-type='EmailAddress']`;\r\n        const $emailElement = $(emailSelector);\r\n        const passwordSelector = `${this.formCreateSelector} [data-field-type='Password']`;\r\n        const $passwordElement = $(passwordSelector);\r\n        const password2Selector = `${this.formCreateSelector} [data-field-type='ConfirmPassword']`;\r\n        const $password2Element = $(password2Selector);\r\n\r\n        createAccountValidator.add(validationModel);\r\n\r\n        if ($stateElement) {\r\n            let $last;\r\n\r\n            // Requests the states for a country with AJAX\r\n            stateCountry($stateElement, this.context, (err, field) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                const $field = $(field);\r\n\r\n                if (createAccountValidator.getStatus($stateElement) !== 'undefined') {\r\n                    createAccountValidator.remove($stateElement);\r\n                }\r\n\r\n                if ($last) {\r\n                    createAccountValidator.remove($last);\r\n                }\r\n\r\n                if ($field.is('select')) {\r\n                    $last = field;\r\n                    Validators.setStateCountryValidation(createAccountValidator, field, this.validationDictionary.field_not_blank);\r\n                } else {\r\n                    Validators.cleanUpStateValidation(field);\r\n                }\r\n            });\r\n        }\r\n\r\n        if ($emailElement) {\r\n            createAccountValidator.remove(emailSelector);\r\n            Validators.setEmailValidation(createAccountValidator, emailSelector, this.validationDictionary.valid_email);\r\n        }\r\n\r\n        if ($passwordElement && $password2Element) {\r\n            const { password: enterPassword, password_match: matchPassword } = this.validationDictionary;\r\n\r\n            createAccountValidator.remove(passwordSelector);\r\n            createAccountValidator.remove(password2Selector);\r\n            Validators.setPasswordValidation(\r\n                createAccountValidator,\r\n                passwordSelector,\r\n                password2Selector,\r\n                this.passwordRequirements,\r\n                createPasswordValidationErrorTextObject(enterPassword, enterPassword, matchPassword, this.passwordRequirements.error),\r\n            );\r\n        }\r\n\r\n        $createAccountForm.on('submit', (event) => {\r\n            this.submitAction(event, createAccountValidator);\r\n        });\r\n    }\r\n\r\n    submitAction(event, validator) {\r\n        validator.performCheck();\r\n\r\n        if (validator.areAll('valid')) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        setTimeout(() => {\r\n            const earliestError = $('span.form-inlineMessage:first').prev('input');\r\n            earliestError.focus();\r\n        }, 900);\r\n    }\r\n\r\n    /**\r\n     * Request is made in this function to the remote endpoint and pulls back the states for country.\r\n     */\r\n    onReady() {\r\n        if (!this.recaptcha.attr('title')) {\r\n            this.recaptcha.attr('title', this.context.recaptchaTitle);\r\n        }\r\n\r\n        const $createAccountForm = classifyForm(this.formCreateSelector);\r\n        const $loginForm = classifyForm('.login-form');\r\n        const $forgotPasswordForm = classifyForm('.forgot-password-form');\r\n        const $newPasswordForm = classifyForm('.new-password-form'); // reset password\r\n\r\n        // Injected via auth.html\r\n        this.passwordRequirements = this.context.passwordRequirements;\r\n\r\n        if ($loginForm.length) {\r\n            this.registerLoginValidation($loginForm);\r\n        }\r\n\r\n        if ($newPasswordForm.length) {\r\n            this.registerNewPasswordValidation();\r\n        }\r\n\r\n        if ($forgotPasswordForm.length) {\r\n            this.registerForgotPasswordValidation($forgotPasswordForm);\r\n        }\r\n\r\n        if ($createAccountForm.length) {\r\n            this.registerCreateAccountValidator($createAccountForm);\r\n        }\r\n    }\r\n}\r\n","import { createTranslationDictionary } from './utils/translations-utils';\r\n\r\n/**\r\n * Validate that the given date for the day/month/year select inputs is within potential range\r\n * @param $formField\r\n * @param validation\r\n * @returns {{selector: string, triggeredBy: string, validate: Function, errorMessage: string}}\r\n */\r\nfunction buildDateValidation($formField, validation, requiredMessage) {\r\n    // No date range restriction, skip\r\n    if (validation.min_date && validation.max_date) {\r\n        const invalidMessage = `Your chosen date must fall between ${validation.min_date} and ${validation.max_date}.`;\r\n        const formElementId = $formField.attr('id');\r\n        const minSplit = validation.min_date.split('-');\r\n        const maxSplit = validation.max_date.split('-');\r\n        const minDate = new Date(minSplit[0], minSplit[1] - 1, minSplit[2]);\r\n        const maxDate = new Date(maxSplit[0], maxSplit[1] - 1, maxSplit[2]);\r\n\r\n        return {\r\n            selector: `#${formElementId} select[data-label=\"year\"]`,\r\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\r\n            validate: (cb, val) => {\r\n                const day = Number($formField.find('select[data-label=\"day\"]').val());\r\n                const month = Number($formField.find('select[data-label=\"month\"]').val()) - 1;\r\n                const year = Number(val);\r\n                const chosenDate = new Date(year, month, day);\r\n\r\n                cb(chosenDate >= minDate && chosenDate <= maxDate);\r\n            },\r\n            errorMessage: invalidMessage,\r\n        };\r\n    }\r\n    // Required Empty Date field\r\n    if (validation.required && (!validation.min_date || !validation.max_date)) {\r\n        const formElementId = $formField.attr('id');\r\n\r\n        return {\r\n            selector: `#${formElementId} select[data-label=\"year\"]`,\r\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\r\n            validate: (cb, val) => {\r\n                const day = $formField.find('select[data-label=\"day\"]').val();\r\n                const month = $formField.find('select[data-label=\"month\"]').val();\r\n                const year = val;\r\n\r\n                cb(day && month && year);\r\n            },\r\n            errorMessage: requiredMessage,\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * We validate checkboxes separately from single input fields, as they must have at least one checked option\r\n * from many different inputs\r\n * @param $formField\r\n * @param validation\r\n * @param errorText provides error validation message\r\n */\r\nfunction buildRequiredCheckboxValidation(validation, $formField, errorText) {\r\n    const formFieldId = $formField.attr('id');\r\n    const primarySelector = `#${formFieldId} input:first-of-type`;\r\n    const secondarySelector = `#${formFieldId} input`;\r\n\r\n    return {\r\n        selector: primarySelector,\r\n        triggeredBy: secondarySelector,\r\n        validate: (cb) => {\r\n            let result = false;\r\n\r\n            $(secondarySelector).each((index, checkbox) => {\r\n                if (checkbox.checked) {\r\n                    result = true;\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            cb(result);\r\n        },\r\n        errorMessage: errorText,\r\n    };\r\n}\r\n\r\nfunction buildRequiredValidation(validation, selector, errorText) {\r\n    return {\r\n        selector,\r\n        validate(cb, val) {\r\n            cb(val.length > 0);\r\n        },\r\n        errorMessage: errorText,\r\n    };\r\n}\r\n\r\nfunction buildNumberRangeValidation(validation, formFieldSelector) {\r\n    const invalidMessage = `The value for ${validation.label} must be between ${validation.min} and ${validation.max}.`;\r\n    const min = Number(validation.min);\r\n    const max = Number(validation.max);\r\n\r\n    return {\r\n        selector: `${formFieldSelector} input[name=\"${validation.name}\"]`,\r\n        validate: (cb, val) => {\r\n            const numberVal = Number(val);\r\n\r\n            cb(numberVal >= min && numberVal <= max);\r\n        },\r\n        errorMessage: invalidMessage,\r\n    };\r\n}\r\n\r\n\r\nfunction buildValidation($validateableElement, errorMessage) {\r\n    const validation = $validateableElement.data('validation');\r\n    const fieldValidations = [];\r\n    const formFieldSelector = `#${$validateableElement.attr('id')}`;\r\n\r\n    if (validation.type === 'datechooser') {\r\n        const dateValidation = buildDateValidation($validateableElement, validation, errorMessage);\r\n\r\n        if (dateValidation) {\r\n            fieldValidations.push(dateValidation);\r\n        }\r\n    } else if (validation.required && (validation.type === 'checkboxselect' || validation.type === 'radioselect')) {\r\n        fieldValidations.push(buildRequiredCheckboxValidation(validation, $validateableElement, errorMessage));\r\n    } else {\r\n        $validateableElement.find('input, select, textarea').each((index, element) => {\r\n            const $inputElement = $(element);\r\n            const tagName = $inputElement.get(0).tagName;\r\n            const inputName = $inputElement.attr('name');\r\n            const elementSelector = `${formFieldSelector} ${tagName}[name=\"${inputName}\"]`;\r\n\r\n            if (validation.type === 'numberonly') {\r\n                fieldValidations.push(buildNumberRangeValidation(validation, formFieldSelector));\r\n            }\r\n            if (validation.required) {\r\n                fieldValidations.push(buildRequiredValidation(validation, elementSelector, errorMessage));\r\n            }\r\n        });\r\n    }\r\n\r\n    return fieldValidations;\r\n}\r\n\r\n/**\r\n * Builds the validation model for dynamic forms\r\n * @param $form\r\n * @param context provides access for error messages on required fields validation\r\n * @returns {Array}\r\n */\r\nexport default function ($form, context) {\r\n    let validationsToPerform = [];\r\n    const { field_not_blank: requiredFieldValidationText } = createTranslationDictionary(context);\r\n\r\n    $form.find('[data-validation]').each((index, input) => {\r\n        const getLabel = $el => $el.first().data('validation').label;\r\n        const requiredValidationMessage = getLabel($(input)) + requiredFieldValidationText;\r\n\r\n        validationsToPerform = validationsToPerform.concat(buildValidation($(input), requiredValidationMessage));\r\n    });\r\n\r\n    return validationsToPerform;\r\n}\r\n","import utils from '@bigcommerce/stencil-utils';\r\nimport _ from 'lodash';\r\nimport { insertStateHiddenField } from './utils/form-utils';\r\nimport { showAlertModal } from '../global/modal';\r\n\r\n/**\r\n * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.\r\n * @returns {jQuery|HTMLElement}\r\n */\r\nfunction makeStateRequired(stateElement, context) {\r\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\r\n        const ret = result;\r\n        ret[item.name] = item.value;\r\n        return ret;\r\n    });\r\n\r\n    const replacementAttributes = {\r\n        id: attrs.id,\r\n        'data-label': attrs['data-label'],\r\n        class: 'form-select',\r\n        name: attrs.name,\r\n        'data-field-type': attrs['data-field-type'],\r\n    };\r\n\r\n    stateElement.replaceWith($('<select></select>', replacementAttributes));\r\n\r\n    const $newElement = $('[data-field-type=\"State\"]');\r\n    const $hiddenInput = $('[name*=\"FormFieldIsText\"]');\r\n\r\n    if ($hiddenInput.length !== 0) {\r\n        $hiddenInput.remove();\r\n    }\r\n\r\n    if ($newElement.prev().find('small').length === 0) {\r\n        // String is injected from localizer\r\n        $newElement.prev().append(`<small>${context.required}</small>`);\r\n    } else {\r\n        $newElement.prev().find('small').show();\r\n    }\r\n\r\n    return $newElement;\r\n}\r\n\r\n/**\r\n * If a country with states is the default, a select will be sent,\r\n * In this case we need to be able to switch to an input field and hide the required field\r\n */\r\nfunction makeStateOptional(stateElement) {\r\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\r\n        const ret = result;\r\n        ret[item.name] = item.value;\r\n\r\n        return ret;\r\n    });\r\n\r\n    const replacementAttributes = {\r\n        type: 'text',\r\n        id: attrs.id,\r\n        'data-label': attrs['data-label'],\r\n        class: 'form-input',\r\n        name: attrs.name,\r\n        'data-field-type': attrs['data-field-type'],\r\n    };\r\n\r\n    stateElement.replaceWith($('<input />', replacementAttributes));\r\n\r\n    const $newElement = $('[data-field-type=\"State\"]');\r\n\r\n    if ($newElement.length !== 0) {\r\n        insertStateHiddenField($newElement);\r\n        $newElement.prev().find('small').hide();\r\n    }\r\n\r\n    return $newElement;\r\n}\r\n\r\n/**\r\n * Adds the array of options from the remote request to the newly created select box.\r\n * @param {Object} statesArray\r\n * @param {jQuery} $selectElement\r\n * @param {Object} options\r\n */\r\nfunction addOptions(statesArray, $selectElement, options) {\r\n    const container = [];\r\n\r\n    container.push(`<option value=\"\">${statesArray.prefix}</option>`);\r\n\r\n    if (!_.isEmpty($selectElement)) {\r\n        statesArray.states.forEach((stateObj) => {\r\n            if (options.useIdForStates) {\r\n                container.push(`<option value=\"${stateObj.id}\">${stateObj.name}</option>`);\r\n            } else {\r\n                container.push(`<option value=\"${stateObj.name}\">${stateObj.label ? stateObj.label : stateObj.name}</option>`);\r\n            }\r\n        });\r\n\r\n        $selectElement.html(container.join(' '));\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {jQuery} stateElement\r\n * @param {Object} context\r\n * @param {Object} options\r\n * @param {Function} callback\r\n */\r\nexport default function (stateElement, context = {}, options, callback) {\r\n    /**\r\n     * Backwards compatible for three parameters instead of four\r\n     *\r\n     * Available options:\r\n     *\r\n     * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings\r\n     */\r\n    if (typeof options === 'function') {\r\n        /* eslint-disable no-param-reassign */\r\n        callback = options;\r\n        options = {};\r\n        /* eslint-enable no-param-reassign */\r\n    }\r\n\r\n    $('select[data-field-type=\"Country\"]').on('change', event => {\r\n        const countryName = $(event.currentTarget).val();\r\n\r\n        if (countryName === '') {\r\n            return;\r\n        }\r\n\r\n        utils.api.country.getByName(countryName, (err, response) => {\r\n            if (err) {\r\n                showAlertModal(context.state_error);\r\n                return callback(err);\r\n            }\r\n\r\n            const $currentInput = $('[data-field-type=\"State\"]');\r\n\r\n            if (!_.isEmpty(response.data.states)) {\r\n                // The element may have been replaced with a select, reselect it\r\n                const $selectElement = makeStateRequired($currentInput, context);\r\n\r\n                addOptions(response.data, $selectElement, options);\r\n                callback(null, $selectElement);\r\n            } else {\r\n                const newElement = makeStateOptional($currentInput, context);\r\n\r\n                callback(null, newElement);\r\n            }\r\n        });\r\n    });\r\n}\r\n","const TRANSLATIONS = 'translations';\r\nconst isTranslationDictionaryNotEmpty = (dictionary) => !!Object.keys(dictionary[TRANSLATIONS]).length;\r\nconst chooseActiveDictionary = (...dictionaryJsonList) => {\r\n    for (let i = 0; i < dictionaryJsonList.length; i++) {\r\n        const dictionary = JSON.parse(dictionaryJsonList[i]);\r\n        if (isTranslationDictionaryNotEmpty(dictionary)) {\r\n            return dictionary;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * defines Translation Dictionary to use\r\n * @param context provides access to 3 validation JSONs from en.json:\r\n * validation_messages, validation_fallback_messages and default_messages\r\n * @returns {Object}\r\n */\r\nexport const createTranslationDictionary = (context) => {\r\n    const { validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON } = context;\r\n    const activeDictionary = chooseActiveDictionary(validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON);\r\n    const localizations = Object.values(activeDictionary[TRANSLATIONS]);\r\n    const translationKeys = Object.keys(activeDictionary[TRANSLATIONS]).map(key => key.split('.').pop());\r\n\r\n    return translationKeys.reduce((acc, key, i) => {\r\n        acc[key] = localizations[i];\r\n        return acc;\r\n    }, {});\r\n};\r\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n"],"names":["Auth","_PageManager","context","_this","call","validationDictionary","createTranslationDictionary","formCreateSelector","recaptcha","$","_proto","prototype","registerLoginValidation","$loginForm","_this2","loginModel","forms","this","loginValidator","nod","submit","tap","announceInputErrorMessage","add","selector","validate","cb","val","email","errorMessage","useValidEmail","password","enterPass","on","event","performCheck","areAll","preventDefault","registerForgotPasswordValidation","$forgotPasswordForm","_this3","forgotPasswordValidator","registerNewPasswordValidation","_this$validationDicti","enterPassword","matchPassword","password_match","newPasswordForm","newPasswordValidator","passwordSelector","password2Selector","errorTextMessages","createPasswordValidationErrorTextObject","passwordRequirements","error","Validators","setPasswordValidation","registerCreateAccountValidator","$createAccountForm","$last","_this4","validationModel","validation","createAccountValidator","delay","$stateElement","emailSelector","$emailElement","$passwordElement","$password2Element","stateCountry","err","field","Error","$field","getStatus","remove","is","setStateCountryValidation","field_not_blank","cleanUpStateValidation","setEmailValidation","valid_email","_this$validationDicti2","submitAction","validator","setTimeout","prev","focus","onReady","attr","recaptchaTitle","classifyForm","$newPasswordForm","length","PageManager","$form","validationsToPerform","requiredFieldValidationText","find","each","index","input","requiredValidationMessage","first","data","label","concat","$validateableElement","errorText","formFieldId","secondarySelector","fieldValidations","formFieldSelector","type","dateValidation","$formField","requiredMessage","min_date","max_date","invalidMessage","formElementId","minSplit","split","maxSplit","minDate","Date","maxDate","triggeredBy","day","Number","month","year","chosenDate","required","buildDateValidation","push","element","$inputElement","tagName","get","inputName","elementSelector","min","max","name","numberVal","buildNumberRangeValidation","buildRequiredValidation","result","checkbox","checked","buildValidation","stateElement","options","callback","countryName","currentTarget","utils","country","getByName","response","showAlertModal","state_error","$currentInput","_isEmpty","states","newElement","attrs","_transform","prop","item","ret","value","replacementAttributes","id","class","replaceWith","$newElement","insertStateHiddenField","hide","makeStateOptional","$selectElement","$hiddenInput","append","show","makeStateRequired","statesArray","container","prefix","forEach","stateObj","useIdForStates","html","join","addOptions","TRANSLATIONS","isTranslationDictionaryNotEmpty","dictionary","Object","keys","activeDictionary","i","arguments","JSON","parse","undefined","chooseActiveDictionary","validationDictionaryJSON","validationFallbackDictionaryJSON","validationDefaultDictionaryJSON","localizations","values","map","key","pop","reduce","acc","module","exports","array","iteratee","isObject","objectCreate","create","baseCreate","object","proto","baseFor","createBaseFor","fromRight","keysFunc","iterable","props","nativeKeys","overArg","arrayEach","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isTypedArray","accumulator","isArr","isArrLike","Ctor","constructor"],"sourceRoot":""}